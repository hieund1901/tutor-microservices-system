{"@timestamp":"2024-05-28T21:24:24.361+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:26.779+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:28.352+07:00","@version":"1","message":"Located environment: name=course-service,config-client, config-security, config-kafka, profiles=[course_service], label=null, version=73d3633a8e91888f463b337ad050291532e204ad, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:28.354+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-kafka.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-security.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:28.362+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:29.347+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:29.655+07:00","@version":"1","message":"Finished Spring Data repository scanning in 297 ms. Found 4 JPA repository interfaces.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:30.607+07:00","@version":"1","message":"BeanFactory id=81124521-58fd-3cc9-8141-418a403dc9b4","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.019+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:31.023+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:31.026+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:31.029+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:31.032+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:31.594+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.622+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.628+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.628+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.821+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:31.823+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 3443 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:32.302+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:32.49+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:32.595+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:33.187+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:33.281+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:33.517+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@69c0bae6","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:33.521+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:33.572+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:36.226+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:36.457+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.313+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseController' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\controller\\CourseController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'courseService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'courseVideoService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseVideoService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'courseEnrollmentService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseEnrollmentService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-28T21:24:37.315+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.32+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.33+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.336+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.365+07:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-28T21:24:37.395+07:00","@version":"1","message":"Application run failed","logger_name":"org.springframework.boot.SpringApplication","thread_name":"main","level":"ERROR","level_value":40000,"stack_trace":"org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseController' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\controller\\CourseController.class]: Unsatisfied dependency expressed through constructor parameter 0: Error creating bean with name 'courseService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'courseVideoService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseVideoService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'courseEnrollmentService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseEnrollmentService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:975)\r\n\tat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:962)\r\n\tat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:624)\r\n\tat org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext.refresh(ServletWebServerApplicationContext.java:146)\r\n\tat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:754)\r\n\tat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:456)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:334)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1354)\r\n\tat org.springframework.boot.SpringApplication.run(SpringApplication.java:1343)\r\n\tat com.microservices.projectfinal.CourseServiceApp.main(CourseServiceApp.java:11)\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'courseVideoService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseVideoService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'courseEnrollmentService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseEnrollmentService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)\r\n\t... 19 common frames omitted\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseVideoService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseVideoService.class]: Unsatisfied dependency expressed through constructor parameter 3: Error creating bean with name 'courseEnrollmentService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseEnrollmentService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)\r\n\t... 33 common frames omitted\r\nCaused by: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'courseEnrollmentService' defined in file [D:\\personal\\hieu-datn\\tutor-system\\course-service\\target\\classes\\com\\microservices\\projectfinal\\service\\impl\\CourseEnrollmentService.class]: Unsatisfied dependency expressed through constructor parameter 2: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:795)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:237)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1355)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1192)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:562)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)\r\n\t... 47 common frames omitted\r\nCaused by: org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'paymentTransactionRepository' defined in com.microservices.projectfinal.repository.PaymentTransactionRepository defined in @EnableJpaRepositories declared on JpaRepositoriesRegistrar.EnableJpaRepositoriesConfiguration: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1786)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:600)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:522)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:326)\r\n\tat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:234)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:324)\r\n\tat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:200)\r\n\tat org.springframework.beans.factory.config.DependencyDescriptor.resolveCandidate(DependencyDescriptor.java:254)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.doResolveDependency(DefaultListableBeanFactory.java:1443)\r\n\tat org.springframework.beans.factory.support.DefaultListableBeanFactory.resolveDependency(DefaultListableBeanFactory.java:1353)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.resolveAutowiredArgument(ConstructorResolver.java:904)\r\n\tat org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:782)\r\n\t... 61 common frames omitted\r\nCaused by: org.springframework.data.repository.query.QueryCreationException: Could not create query for public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); Reason: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.data.repository.query.QueryCreationException.create(QueryCreationException.java:101)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:115)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.mapMethodsToQuery(QueryExecutorMethodInterceptor.java:99)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lambda$new$0(QueryExecutorMethodInterceptor.java:88)\r\n\tat java.base/java.util.Optional.map(Optional.java:260)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.<init>(QueryExecutorMethodInterceptor.java:88)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactorySupport.getRepository(RepositoryFactorySupport.java:357)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.lambda$afterPropertiesSet$5(RepositoryFactoryBeanSupport.java:279)\r\n\tat org.springframework.data.util.Lazy.getNullable(Lazy.java:135)\r\n\tat org.springframework.data.util.Lazy.get(Lazy.java:113)\r\n\tat org.springframework.data.repository.core.support.RepositoryFactoryBeanSupport.afterPropertiesSet(RepositoryFactoryBeanSupport.java:285)\r\n\tat org.springframework.data.jpa.repository.support.JpaRepositoryFactoryBean.afterPropertiesSet(JpaRepositoryFactoryBean.java:132)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.invokeInitMethods(AbstractAutowireCapableBeanFactory.java:1833)\r\n\tat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.initializeBean(AbstractAutowireCapableBeanFactory.java:1782)\r\n\t... 72 common frames omitted\r\nCaused by: java.lang.IllegalArgumentException: Failed to create query for method public abstract java.util.Optional com.microservices.projectfinal.repository.PaymentTransactionRepository.findByReferenceIdAndReferenceTypeAndUserId(java.lang.Long,com.microservices.projectfinal.entity.PaymentTransactionEntity$ReferenceType,java.lang.String); No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:106)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:124)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$CreateIfNotFoundQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:258)\r\n\tat org.springframework.data.jpa.repository.query.JpaQueryLookupStrategy$AbstractQueryLookupStrategy.resolveQuery(JpaQueryLookupStrategy.java:95)\r\n\tat org.springframework.data.repository.core.support.QueryExecutorMethodInterceptor.lookupQuery(QueryExecutorMethodInterceptor.java:111)\r\n\t... 84 common frames omitted\r\nCaused by: org.springframework.data.mapping.PropertyReferenceException: No property 'referenceId' found for type 'PaymentTransactionEntity'; Did you mean 'referenceIds'\r\n\tat org.springframework.data.mapping.PropertyPath.<init>(PropertyPath.java:90)\r\n\tat org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:443)\r\n\tat org.springframework.data.mapping.PropertyPath.create(PropertyPath.java:419)\r\n\tat org.springframework.data.mapping.PropertyPath.lambda$from$0(PropertyPath.java:372)\r\n\tat java.base/java.util.concurrent.ConcurrentMap.computeIfAbsent(ConcurrentMap.java:330)\r\n\tat org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:354)\r\n\tat org.springframework.data.mapping.PropertyPath.from(PropertyPath.java:332)\r\n\tat org.springframework.data.repository.query.parser.Part.<init>(Part.java:81)\r\n\tat org.springframework.data.repository.query.parser.PartTree$OrPart.lambda$new$0(PartTree.java:259)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\r\n\tat org.springframework.data.repository.query.parser.PartTree$OrPart.<init>(PartTree.java:260)\r\n\tat org.springframework.data.repository.query.parser.PartTree$Predicate.lambda$new$0(PartTree.java:389)\r\n\tat java.base/java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:197)\r\n\tat java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:179)\r\n\tat java.base/java.util.Spliterators$ArraySpliterator.forEachRemaining(Spliterators.java:992)\r\n\tat java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)\r\n\tat java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)\r\n\tat java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)\r\n\tat java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)\r\n\tat java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)\r\n\tat org.springframework.data.repository.query.parser.PartTree$Predicate.<init>(PartTree.java:390)\r\n\tat org.springframework.data.repository.query.parser.PartTree.<init>(PartTree.java:103)\r\n\tat org.springframework.data.jpa.repository.query.PartTreeJpaQuery.<init>(PartTreeJpaQuery.java:100)\r\n\t... 88 common frames omitted\r\n"}
