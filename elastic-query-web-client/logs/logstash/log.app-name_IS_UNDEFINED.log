{"@timestamp":"2024-05-04T19:46:21.749+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:22.15+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:23.217+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=504b8b85ee688c25ccb011286675db1819186367, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:23.219+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:23.225+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:23.868+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:23.989+07:00","@version":"1","message":"Finished Spring Data repository scanning in 114 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.225+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.333+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:24.335+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:24.336+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:24.337+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:24.338+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:24.545+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.553+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.555+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.556+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.614+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.614+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1379 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.758+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.817+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:24.851+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:25.055+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:25.079+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:25.316+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b82018","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:25.317+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:25.345+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:26.246+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:26.336+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:26.612+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:26.986+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.177+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T19:46:27.211+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.226+07:00","@version":"1","message":"Tomcat started on port 63505 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.227+07:00","@version":"1","message":"Updating port to 63505","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.231+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.257+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.261+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.278+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.279+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.475+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.477+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.479+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.484+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714826787483 with initial instances count: 1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.486+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.487+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714826787487, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.488+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.522+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:46:27.643+07:00","@version":"1","message":"Started CourseServiceApp in 6.572 seconds (process running for 7.617)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:48:13.552+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:48:13.553+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:48:13.554+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:51:27.292+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T19:56:27.295+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:01:27.307+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:10.741+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:10.741+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714827910741, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:10.741+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:10.787+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:12.858+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:12.86+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:12.862+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:12.863+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:15.865+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:15.886+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:15.89+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:19.552+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:19.938+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.024+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=504b8b85ee688c25ccb011286675db1819186367, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.025+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.03+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.471+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.569+07:00","@version":"1","message":"Finished Spring Data repository scanning in 91 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.767+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:21.853+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:21.854+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:21.855+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:21.856+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:21.857+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:22.021+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.029+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.031+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.031+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.081+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.082+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1043 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.191+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.241+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.271+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.476+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.501+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.64+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b82018","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.642+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:22.669+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:23.605+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:23.693+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:23.967+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:24.358+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.556+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:24.59+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.605+07:00","@version":"1","message":"Tomcat started on port 64323 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.606+07:00","@version":"1","message":"Updating port to 64323","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.61+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.638+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.642+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.66+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.854+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.857+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.86+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.863+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714827924862 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.865+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.865+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714827924865, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.867+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:24.91+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:25.052+07:00","@version":"1","message":"Started CourseServiceApp in 6.151 seconds (process running for 6.823)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:38.093+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:38.093+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:38.096+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:05:38.341+07:00","@version":"1","message":"No servers available for service: localhost","logger_name":"org.springframework.cloud.loadbalancer.core.RoundRobinLoadBalancer","thread_name":"http-nio-auto-1-exec-1","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:38.342+07:00","@version":"1","message":"LoadBalancer does not contain an instance for the service localhost","logger_name":"org.springframework.cloud.client.loadbalancer.reactive.ReactorLoadBalancerExchangeFilterFunction","thread_name":"http-nio-auto-1-exec-1","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:05:38.366+07:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [/course] threw exception [Request processing failed: java.lang.RuntimeException: LoadBalancer does not contain an instance for the service localhost] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course].[dispatcherServlet]","thread_name":"http-nio-auto-1-exec-1","level":"ERROR","level_value":40000,"stack_trace":"java.lang.RuntimeException: LoadBalancer does not contain an instance for the service localhost\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nAssembly trace from producer [reactor.core.publisher.MonoIgnoreThen] :\n\treactor.core.publisher.Mono.then(Mono.java:4872)\n\torg.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\nError has been observed at the following site(s):\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:687)\r\n\t|_ Mono.onErrorResume ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:688)\r\n\t|_       Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:693)\r\n\t|_         checkpoint ⇢ 503 SERVICE_UNAVAILABLE from GET http://localhost:8080/accounting/tutor [DefaultWebClient]\r\n\t|_ Mono.switchIfEmpty ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:656)\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.bodyToMono(DefaultWebClient.java:572)\r\nOriginal Stack Trace:\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)\r\n\t\tat reactor.core.publisher.Operators$ScalarSubscription.request(Operators.java:2573)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.request(Operators.java:2067)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.request(FluxFilterFuseable.java:411)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.request(FluxMapFuseable.java:360)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.request(FluxContextWrite.java:136)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.request(FluxMapFuseable.java:171)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.request(MonoFlatMap.java:194)\r\n\t\tat reactor.core.publisher.Operators$MultiSubscriptionSubscriber.set(Operators.java:2367)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onSubscribe(FluxOnErrorResume.java:74)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onSubscribe(MonoFlatMap.java:117)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onSubscribe(FluxContextWrite.java:101)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onSubscribe(FluxMapFuseable.java:265)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onSubscribe(FluxFilterFuseable.java:305)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.onSubscribe(Operators.java:2051)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onSubscribe(FluxMapFuseable.java:96)\r\n\t\tat reactor.core.publisher.FluxJust.subscribe(FluxJust.java:68)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113)\r\n\t\tat reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableConditionalSubscriber.onNext(FluxPeekFuseable.java:503)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:158)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.MonoNext$NextSubscriber.onNext(MonoNext.java:82)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:98)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:453)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724)\r\n\t\tat reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onNext(FluxFlattenIterable.java:256)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.secondComplete(MonoFlatMap.java:245)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapInner.onNext(MonoFlatMap.java:305)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:294)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:188)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:237)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onComplete(MonoIgnoreThen.java:204)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onComplete(MonoIgnoreElements.java:89)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onComplete(FluxDematerialize.java:121)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:91)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onNext(FluxDematerialize.java:44)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.fastPath(FluxIterable.java:402)\r\n\t\tat reactor.core.publisher.FluxIterable$IterableSubscription.request(FluxIterable.java:291)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.request(FluxDematerialize.java:127)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.request(FluxPeekFuseable.java:144)\r\n\t\tat reactor.core.publisher.MonoIgnoreElements$IgnoreElementsSubscriber.onSubscribe(MonoIgnoreElements.java:72)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onSubscribe(FluxPeekFuseable.java:178)\r\n\t\tat reactor.core.publisher.FluxDematerialize$DematerializeSubscriber.onSubscribe(FluxDematerialize.java:77)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:201)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4568)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.subscribeNext(MonoIgnoreThen.java:265)\r\n\t\tat reactor.core.publisher.MonoIgnoreThen.subscribe(MonoIgnoreThen.java:51)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat reactor.core.publisher.DrainUtils.postCompleteDrain(DrainUtils.java:132)\r\n\t\tat reactor.core.publisher.DrainUtils.postComplete(DrainUtils.java:187)\r\n\t\tat reactor.core.publisher.FluxMaterialize$MaterializeSubscriber.onComplete(FluxMaterialize.java:141)\r\n\t\tat reactor.core.publisher.FluxLimitRequest$FluxLimitRequestSubscriber.onNext(FluxLimitRequest.java:104)\r\n\t\tat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79)\r\n\t\tat reactor.core.publisher.SerializedSubscriber.onNext(SerializedSubscriber.java:99)\r\n\t\tat reactor.core.publisher.FluxTimeout$TimeoutMainSubscriber.onNext(FluxTimeout.java:181)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollectList$MonoCollectListSubscriber.onComplete(MonoCollectList.java:118)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$FirstNonEmptyEmittingSubscriber.onComplete(FluxFirstNonEmptyEmitting.java:325)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:137)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:144)\r\n\t\tat reactor.core.publisher.FluxIterable.subscribe(FluxIterable.java:83)\r\n\t\tat reactor.core.publisher.Flux.subscribe(Flux.java:8840)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting$RaceCoordinator.subscribe(FluxFirstNonEmptyEmitting.java:203)\r\n\t\tat org.springframework.cloud.commons.publisher.FluxFirstNonEmptyEmitting.subscribe(FluxFirstNonEmptyEmitting.java:128)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4568)\r\n\t\tat reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onComplete(FluxSwitchIfEmpty.java:82)\r\n\t\tat reactor.core.publisher.Operators.complete(Operators.java:137)\r\n\t\tat reactor.core.publisher.MonoEmpty.subscribe(MonoEmpty.java:46)\r\n\t\tat reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68)\r\n\t\tat reactor.core.publisher.FluxDefer.subscribe(FluxDefer.java:54)\r\n\t\tat reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76)\r\n\t\tat reactor.core.publisher.MonoDeferContextual.subscribe(MonoDeferContextual.java:55)\r\n\t\tat reactor.core.publisher.Mono.subscribe(Mono.java:4568)\r\n\t\tat reactor.core.publisher.Mono.block(Mono.java:1778)\r\n\t\tat com.microservices.projectfinal.client.api.account.TutorClient.getTutorByEmail(TutorClient.java:20)\r\n\t\tat com.microservices.projectfinal.service.impl.CourseService.createCourse(CourseService.java:28)\r\n\t\tat com.microservices.projectfinal.controller.CourseController.createCourse(CourseController.java:17)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\t\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n\tSuppressed: java.lang.Exception: #block terminated with an error\r\n\t\tat reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)\r\n\t\tat reactor.core.publisher.Mono.block(Mono.java:1779)\r\n\t\tat com.microservices.projectfinal.client.api.account.TutorClient.getTutorByEmail(TutorClient.java:20)\r\n\t\tat com.microservices.projectfinal.service.impl.CourseService.createCourse(CourseService.java:28)\r\n\t\tat com.microservices.projectfinal.controller.CourseController.createCourse(CourseController.java:17)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\t\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n"}
{"@timestamp":"2024-05-04T20:06:08.344+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.345+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714827968345, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.345+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.362+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.363+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.365+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.367+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:08.368+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:11.384+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:11.404+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:11.407+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:14.69+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:15.125+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.216+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=504b8b85ee688c25ccb011286675db1819186367, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.217+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.222+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.682+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.785+07:00","@version":"1","message":"Finished Spring Data repository scanning in 98 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:16.984+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.07+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:17.072+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:17.074+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:17.075+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:17.077+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:17.235+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.243+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.246+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.246+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.295+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.295+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1063 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.406+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.456+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.49+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.707+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.73+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.974+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@11174bf","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:17.975+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:18.004+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:18.981+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:19.07+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:19.391+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:19.818+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.006+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:06:20.044+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.058+07:00","@version":"1","message":"Tomcat started on port 64522 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.058+07:00","@version":"1","message":"Updating port to 64522","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.062+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.089+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.093+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.113+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.114+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.309+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.311+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.313+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.317+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714827980316 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.319+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.319+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714827980319, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.321+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.362+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:20.502+07:00","@version":"1","message":"Started CourseServiceApp in 6.515 seconds (process running for 7.128)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:47.832+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:47.833+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:06:47.834+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:11:20.128+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:16:20.134+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:31:40.924+07:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=14m22s698ms386µs500ns).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:35:12.835+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:53.646+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:53.646+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714829753646, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:53.646+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:53.673+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:55.747+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:55.749+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:55.751+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:55.751+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:58.767+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:58.786+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:35:58.789+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:02.241+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:02.611+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:03.672+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=504b8b85ee688c25ccb011286675db1819186367, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:03.674+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:03.681+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.134+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.249+07:00","@version":"1","message":"Finished Spring Data repository scanning in 109 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.477+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.565+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:04.567+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:04.568+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:04.568+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:04.57+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:04.745+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.753+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.755+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.755+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.81+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.81+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1119 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.925+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:04.98+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.027+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.255+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.279+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.449+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e0e0ba7","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.451+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:05.489+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:06.666+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:06.777+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.117+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:07.612+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.896+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:36:07.931+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.945+07:00","@version":"1","message":"Tomcat started on port 58103 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.946+07:00","@version":"1","message":"Updating port to 58103","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.951+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.982+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:07.986+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.007+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.285+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.288+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.29+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.295+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714829768294 with initial instances count: 3","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.297+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.298+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714829768298, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.299+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.329+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:36:08.472+07:00","@version":"1","message":"Started CourseServiceApp in 6.93 seconds (process running for 7.537)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:37:58.536+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:37:58.536+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:37:58.538+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:39:37.23+07:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=1m29s268ms437µs200ns).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:39:49.468+07:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [/course] threw exception [Request processing failed: java.lang.RuntimeException: {\"timestamp\":\"2024-05-04T13:39:49.455+00:00\",\"path\":\"/accounting/tutor\",\"status\":500,\"error\":\"Internal Server Error\",\"requestId\":\"ea3fd1b5-10\"}] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course].[dispatcherServlet]","thread_name":"http-nio-auto-1-exec-2","level":"ERROR","level_value":40000,"stack_trace":"java.lang.RuntimeException: {\"timestamp\":\"2024-05-04T13:39:49.455+00:00\",\"path\":\"/accounting/tutor\",\"status\":500,\"error\":\"Internal Server Error\",\"requestId\":\"ea3fd1b5-10\"}\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nAssembly trace from producer [reactor.core.publisher.MonoIgnoreThen] :\n\treactor.core.publisher.Mono.then(Mono.java:4872)\n\torg.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\nError has been observed at the following site(s):\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:687)\r\n\t|_ Mono.onErrorResume ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:688)\r\n\t|_       Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:693)\r\n\t|_         checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8080/accounting/tutor [DefaultWebClient]\r\n\t|_ Mono.switchIfEmpty ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:656)\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.bodyToMono(DefaultWebClient.java:572)\r\nOriginal Stack Trace:\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:793)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n\tSuppressed: java.lang.Exception: #block terminated with an error\r\n\t\tat reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)\r\n\t\tat reactor.core.publisher.Mono.block(Mono.java:1779)\r\n\t\tat com.microservices.projectfinal.client.api.account.TutorClient.getTutorByEmail(TutorClient.java:20)\r\n\t\tat com.microservices.projectfinal.service.impl.CourseService.createCourse(CourseService.java:28)\r\n\t\tat com.microservices.projectfinal.controller.CourseController.createCourse(CourseController.java:17)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\t\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n"}
{"@timestamp":"2024-05-04T20:40:09.029+07:00","@version":"1","message":"Servlet.service() for servlet [dispatcherServlet] in context with path [/course] threw exception [Request processing failed: java.lang.RuntimeException: {\"timestamp\":\"2024-05-04T13:40:09.025+00:00\",\"path\":\"/accounting/tutor\",\"status\":500,\"error\":\"Internal Server Error\",\"requestId\":\"ea3fd1b5-12\"}] with root cause","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course].[dispatcherServlet]","thread_name":"http-nio-auto-1-exec-3","level":"ERROR","level_value":40000,"stack_trace":"java.lang.RuntimeException: {\"timestamp\":\"2024-05-04T13:40:09.025+00:00\",\"path\":\"/accounting/tutor\",\"status\":500,\"error\":\"Internal Server Error\",\"requestId\":\"ea3fd1b5-12\"}\r\n\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\tSuppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: \nAssembly trace from producer [reactor.core.publisher.MonoIgnoreThen] :\n\treactor.core.publisher.Mono.then(Mono.java:4872)\n\torg.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\nError has been observed at the following site(s):\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:687)\r\n\t|_ Mono.onErrorResume ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:688)\r\n\t|_       Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.applyStatusHandlers(DefaultWebClient.java:693)\r\n\t|_         checkpoint ⇢ 500 INTERNAL_SERVER_ERROR from GET http://localhost:8080/accounting/tutor [DefaultWebClient]\r\n\t|_ Mono.switchIfEmpty ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.handleBodyMono(DefaultWebClient.java:656)\r\n\t*___________Mono.then ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient.releaseIfNotConsumed(DefaultWebClient.java:193)\r\n\t*________Mono.flatMap ⇢ at org.springframework.web.reactive.function.client.DefaultWebClient$DefaultResponseSpec.bodyToMono(DefaultWebClient.java:572)\r\nOriginal Stack Trace:\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:113)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129)\r\n\t\tat reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299)\r\n\t\tat reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337)\r\n\t\tat reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2097)\r\n\t\tat reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145)\r\n\t\tat reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onComplete(FluxMapFuseable.java:152)\r\n\t\tat reactor.core.publisher.FluxPeekFuseable$PeekFuseableSubscriber.onComplete(FluxPeekFuseable.java:277)\r\n\t\tat reactor.core.publisher.FluxMap$MapSubscriber.onComplete(FluxMap.java:144)\r\n\t\tat reactor.netty.channel.FluxReceive.onInboundComplete(FluxReceive.java:415)\r\n\t\tat reactor.netty.channel.ChannelOperations.onInboundComplete(ChannelOperations.java:446)\r\n\t\tat reactor.netty.channel.ChannelOperations.terminate(ChannelOperations.java:500)\r\n\t\tat reactor.netty.http.client.HttpClientOperations.onInboundNext(HttpClientOperations.java:793)\r\n\t\tat reactor.netty.channel.ChannelOperationsHandler.channelRead(ChannelOperationsHandler.java:114)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.handler.codec.MessageToMessageDecoder.channelRead(MessageToMessageDecoder.java:103)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:444)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler$DelegatingChannelHandlerContext.fireChannelRead(CombinedChannelDuplexHandler.java:436)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.fireChannelRead(ByteToMessageDecoder.java:346)\r\n\t\tat io.netty.handler.codec.ByteToMessageDecoder.channelRead(ByteToMessageDecoder.java:318)\r\n\t\tat io.netty.channel.CombinedChannelDuplexHandler.channelRead(CombinedChannelDuplexHandler.java:251)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:442)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.fireChannelRead(AbstractChannelHandlerContext.java:412)\r\n\t\tat io.netty.channel.DefaultChannelPipeline$HeadContext.channelRead(DefaultChannelPipeline.java:1410)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:440)\r\n\t\tat io.netty.channel.AbstractChannelHandlerContext.invokeChannelRead(AbstractChannelHandlerContext.java:420)\r\n\t\tat io.netty.channel.DefaultChannelPipeline.fireChannelRead(DefaultChannelPipeline.java:919)\r\n\t\tat io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:166)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:788)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:724)\r\n\t\tat io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:650)\r\n\t\tat io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:562)\r\n\t\tat io.netty.util.concurrent.SingleThreadEventExecutor$4.run(SingleThreadEventExecutor.java:997)\r\n\t\tat io.netty.util.internal.ThreadExecutorMap$2.run(ThreadExecutorMap.java:74)\r\n\t\tat io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n\tSuppressed: java.lang.Exception: #block terminated with an error\r\n\t\tat reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104)\r\n\t\tat reactor.core.publisher.Mono.block(Mono.java:1779)\r\n\t\tat com.microservices.projectfinal.client.api.account.TutorClient.getTutorByEmail(TutorClient.java:20)\r\n\t\tat com.microservices.projectfinal.service.impl.CourseService.createCourse(CourseService.java:28)\r\n\t\tat com.microservices.projectfinal.controller.CourseController.createCourse(CourseController.java:17)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\t\tat java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)\r\n\t\tat java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\t\tat java.base/java.lang.reflect.Method.invoke(Method.java:568)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.doInvoke(InvocableHandlerMethod.java:255)\r\n\t\tat org.springframework.web.method.support.InvocableHandlerMethod.invokeForRequest(InvocableHandlerMethod.java:188)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.ServletInvocableHandlerMethod.invokeAndHandle(ServletInvocableHandlerMethod.java:118)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.invokeHandlerMethod(RequestMappingHandlerAdapter.java:926)\r\n\t\tat org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter.handleInternal(RequestMappingHandlerAdapter.java:831)\r\n\t\tat org.springframework.web.servlet.mvc.method.AbstractHandlerMethodAdapter.handle(AbstractHandlerMethodAdapter.java:87)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doDispatch(DispatcherServlet.java:1089)\r\n\t\tat org.springframework.web.servlet.DispatcherServlet.doService(DispatcherServlet.java:979)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.processRequest(FrameworkServlet.java:1014)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.doPost(FrameworkServlet.java:914)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:590)\r\n\t\tat org.springframework.web.servlet.FrameworkServlet.service(FrameworkServlet.java:885)\r\n\t\tat jakarta.servlet.http.HttpServlet.service(HttpServlet.java:658)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:206)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.tomcat.websocket.server.WsFilter.doFilter(WsFilter.java:51)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.RequestContextFilter.doFilterInternal(RequestContextFilter.java:100)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.FormContentFilter.doFilterInternal(FormContentFilter.java:93)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.springframework.web.filter.CharacterEncodingFilter.doFilterInternal(CharacterEncodingFilter.java:201)\r\n\t\tat org.springframework.web.filter.OncePerRequestFilter.doFilter(OncePerRequestFilter.java:116)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.internalDoFilter(ApplicationFilterChain.java:175)\r\n\t\tat org.apache.catalina.core.ApplicationFilterChain.doFilter(ApplicationFilterChain.java:150)\r\n\t\tat org.apache.catalina.core.StandardWrapperValve.invoke(StandardWrapperValve.java:167)\r\n\t\tat org.apache.catalina.core.StandardContextValve.invoke(StandardContextValve.java:90)\r\n\t\tat org.apache.catalina.authenticator.AuthenticatorBase.invoke(AuthenticatorBase.java:482)\r\n\t\tat org.apache.catalina.core.StandardHostValve.invoke(StandardHostValve.java:115)\r\n\t\tat org.apache.catalina.valves.ErrorReportValve.invoke(ErrorReportValve.java:93)\r\n\t\tat org.apache.catalina.core.StandardEngineValve.invoke(StandardEngineValve.java:74)\r\n\t\tat org.apache.catalina.connector.CoyoteAdapter.service(CoyoteAdapter.java:344)\r\n\t\tat org.apache.coyote.http11.Http11Processor.service(Http11Processor.java:391)\r\n\t\tat org.apache.coyote.AbstractProcessorLight.process(AbstractProcessorLight.java:63)\r\n\t\tat org.apache.coyote.AbstractProtocol$ConnectionHandler.process(AbstractProtocol.java:896)\r\n\t\tat org.apache.tomcat.util.net.NioEndpoint$SocketProcessor.doRun(NioEndpoint.java:1736)\r\n\t\tat org.apache.tomcat.util.net.SocketProcessorBase.run(SocketProcessorBase.java:52)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1191)\r\n\t\tat org.apache.tomcat.util.threads.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:659)\r\n\t\tat org.apache.tomcat.util.threads.TaskThread$WrappingRunnable.run(TaskThread.java:63)\r\n\t\tat java.base/java.lang.Thread.run(Thread.java:842)\r\n"}
{"@timestamp":"2024-05-04T20:41:08.009+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:44:47.614+07:00","@version":"1","message":"HikariPool-1 - Thread starvation or clock leap detected (housekeeper delta=2m40s343ms970µs300ns).","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"HikariPool-1 housekeeper","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:46:08.017+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:05.254+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:05.255+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714830665255, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:05.255+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:05.277+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:07.344+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:07.345+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:07.355+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:07.357+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:08.027+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"AsyncResolver-bootstrap-executor-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:10.367+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:10.385+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:10.388+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:15.099+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:15.555+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:17.272+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=be428db1b93c6c247dbc9fad64a5841258234690, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:17.274+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:17.28+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:17.734+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:17.853+07:00","@version":"1","message":"Finished Spring Data repository scanning in 113 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.054+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.146+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:18.147+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:18.148+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:18.149+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:18.149+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:18.32+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.33+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.331+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.332+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.385+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.385+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1096 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.501+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.554+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.587+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.8+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.828+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.965+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36885319","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.966+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:18.994+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:19.908+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:19.992+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.182+07:00","@version":"1","message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'standardJacksonObjectMapperBuilderCustomizer' defined in class path resource [org/springframework/boot/autoconfigure/jackson/JacksonAutoConfiguration$Jackson2ObjectMapperBuilderCustomizerConfiguration.class]: Unsatisfied dependency expressed through method 'standardJacksonObjectMapperBuilderCustomizer' parameter 0: Error creating bean with name 'spring.jackson-org.springframework.boot.autoconfigure.jackson.JacksonProperties': Could not bind properties to 'JacksonProperties' : prefix=spring.jackson, ignoreInvalidFields=false, ignoreUnknownFields=true","logger_name":"org.springframework.boot.web.servlet.context.AnnotationConfigServletWebServerApplicationContext","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:51:20.183+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.185+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.188+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.189+07:00","@version":"1","message":"Stopping service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.202+07:00","@version":"1","message":"\r\n\r\nError starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.","logger_name":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLogger","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:51:20.217+07:00","@version":"1","message":"\r\n\r\n***************************\r\nAPPLICATION FAILED TO START\r\n***************************\r\n\r\nDescription:\r\n\r\nFailed to bind properties under 'spring.jackson.serialization' to java.util.Map<com.fasterxml.jackson.databind.SerializationFeature, java.lang.Boolean>:\r\n\r\n    Property: spring.jackson.serialization.wraprootvalue\r\n    Value: \"true\"\r\n    Origin: \"spring.jackson.serialization.WRAP_ROOT_VALUE\" from property source \"bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml\"\r\n    Reason: failed to convert java.lang.String to com.fasterxml.jackson.databind.SerializationFeature (caused by java.lang.IllegalArgumentException: No enum constant com.fasterxml.jackson.databind.SerializationFeature.AUTO_DETECT_FIELDS)\r\n\r\nAction:\r\n\r\nUpdate your application's configuration. The following values are valid:\r\n\r\n    CLOSE_CLOSEABLE\r\n    EAGER_SERIALIZER_FETCH\r\n    FAIL_ON_EMPTY_BEANS\r\n    FAIL_ON_SELF_REFERENCES\r\n    FAIL_ON_UNWRAPPED_TYPE_IDENTIFIERS\r\n    FLUSH_AFTER_WRITE_VALUE\r\n    INDENT_OUTPUT\r\n    ORDER_MAP_ENTRIES_BY_KEYS\r\n    USE_EQUALITY_FOR_OBJECT_ID\r\n    WRAP_EXCEPTIONS\r\n    WRAP_ROOT_VALUE\r\n    WRITE_BIGDECIMAL_AS_PLAIN\r\n    WRITE_CHAR_ARRAYS_AS_JSON_ARRAYS\r\n    WRITE_DATES_AS_TIMESTAMPS\r\n    WRITE_DATES_WITH_CONTEXT_TIME_ZONE\r\n    WRITE_DATES_WITH_ZONE_ID\r\n    WRITE_DATE_KEYS_AS_TIMESTAMPS\r\n    WRITE_DATE_TIMESTAMPS_AS_NANOSECONDS\r\n    WRITE_DURATIONS_AS_TIMESTAMPS\r\n    WRITE_EMPTY_JSON_ARRAYS\r\n    WRITE_ENUMS_USING_INDEX\r\n    WRITE_ENUMS_USING_TO_STRING\r\n    WRITE_ENUM_KEYS_USING_INDEX\r\n    WRITE_NULL_MAP_VALUES\r\n    WRITE_SELF_REFERENCES_AS_NULL\r\n    WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED\r\n","logger_name":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter","thread_name":"main","level":"ERROR","level_value":40000}
{"@timestamp":"2024-05-04T20:59:35.179+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:35.598+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.216+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=99af781c2692c210f544a90bb6241e3696ee399c, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.217+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.222+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.691+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.79+07:00","@version":"1","message":"Finished Spring Data repository scanning in 93 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:37.974+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.07+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:38.071+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:38.072+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:38.073+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:38.074+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:38.232+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.239+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.241+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.241+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.291+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.291+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1060 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.412+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.462+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.494+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.7+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.727+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.858+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@446f3a53","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.859+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:38.888+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:39.973+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:40.094+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:40.405+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:40.786+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:40.97+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T20:59:41.004+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.022+07:00","@version":"1","message":"Tomcat started on port 59287 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.023+07:00","@version":"1","message":"Updating port to 59287","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.027+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.056+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.06+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.08+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.08+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.081+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.081+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.081+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.081+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.081+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.369+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.371+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.374+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.377+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714831181377 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.379+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.38+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831181380, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.381+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.418+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T20:59:41.546+07:00","@version":"1","message":"Started CourseServiceApp in 7.146 seconds (process running for 7.78)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:05.163+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:05.163+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:05.164+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:45.65+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:45.65+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831245650, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:45.65+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:45.666+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:47.728+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:47.729+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:47.731+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:47.732+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:50.747+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:50.764+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:50.768+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:54.88+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:55.287+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:56.362+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=99af781c2692c210f544a90bb6241e3696ee399c, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:56.363+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:56.369+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:56.797+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:56.908+07:00","@version":"1","message":"Finished Spring Data repository scanning in 103 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.09+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.178+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:57.18+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:57.181+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:57.181+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:57.182+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:57.338+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.347+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.349+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.35+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.42+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.42+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1040 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.528+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.579+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.617+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.828+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.853+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.981+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@3e0e0ba7","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:57.982+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:58.01+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:58.917+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.001+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.275+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:59.741+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.941+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:00:59.977+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.993+07:00","@version":"1","message":"Tomcat started on port 59395 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.994+07:00","@version":"1","message":"Updating port to 59395","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:00:59.998+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.041+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.046+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.07+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.07+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.07+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.071+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.071+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.071+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.071+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.342+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.345+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.348+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.353+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714831260352 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.356+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.356+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831260356, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.358+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.393+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:01:00.55+07:00","@version":"1","message":"Started CourseServiceApp in 6.361 seconds (process running for 6.948)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:02:07.368+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:02:07.369+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:02:07.37+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:05.705+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:05.705+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831385705, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:05.706+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:05.727+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:07.795+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:07.796+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:07.798+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:07.799+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:10.801+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:10.82+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:10.824+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:15.616+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:16.07+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:17.175+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=99af781c2692c210f544a90bb6241e3696ee399c, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:17.176+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:17.182+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:17.658+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:17.78+07:00","@version":"1","message":"Finished Spring Data repository scanning in 116 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.014+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.111+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:18.113+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:18.115+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:18.116+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:18.118+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:18.292+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.299+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.301+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.301+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.356+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.356+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1161 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.467+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.516+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.549+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.76+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.791+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.919+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@36885319","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.921+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:18.952+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:20.017+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:20.106+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:20.411+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:20.847+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.046+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:03:21.083+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.099+07:00","@version":"1","message":"Tomcat started on port 59623 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.1+07:00","@version":"1","message":"Updating port to 59623","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.104+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.135+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.139+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.162+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.369+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.371+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.373+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.377+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714831401376 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.379+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.379+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831401379, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.381+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.422+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:03:21.551+07:00","@version":"1","message":"Started CourseServiceApp in 6.755 seconds (process running for 7.462)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:05:43.026+07:00","@version":"1","message":"Initializing Spring DispatcherServlet 'dispatcherServlet'","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:05:43.027+07:00","@version":"1","message":"Initializing Servlet 'dispatcherServlet'","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:05:43.028+07:00","@version":"1","message":"Completed initialization in 1 ms","logger_name":"org.springframework.web.servlet.DispatcherServlet","thread_name":"http-nio-auto-1-exec-1","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:13.928+07:00","@version":"1","message":"Unregistering application COURSE-SERVICE with eureka with status DOWN","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:13.929+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831633929, current=DOWN, previous=UP]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:13.929+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:13.939+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:16.01+07:00","@version":"1","message":"Closing JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:16.012+07:00","@version":"1","message":"HikariPool-1 - Shutdown initiated...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:16.014+07:00","@version":"1","message":"HikariPool-1 - Shutdown completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:16.015+07:00","@version":"1","message":"Shutting down DiscoveryClient ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:19.027+07:00","@version":"1","message":"Unregistering ...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:19.044+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - deregister  status: 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:19.048+07:00","@version":"1","message":"Completed shut down of DiscoveryClient","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"SpringApplicationShutdownHook","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:23.036+07:00","@version":"1","message":"HV000001: Hibernate Validator 8.0.1.Final","logger_name":"org.hibernate.validator.internal.util.Version","thread_name":"background-preinit","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:23.444+07:00","@version":"1","message":"Fetching config from server at : http://localhost:8888","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:24.558+07:00","@version":"1","message":"Located environment: name=course-service,config-client, profiles=[course_service], label=null, version=99af781c2692c210f544a90bb6241e3696ee399c, state=null","logger_name":"org.springframework.cloud.config.client.ConfigServicePropertySourceLocator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:24.56+07:00","@version":"1","message":"Located property source: [BootstrapPropertySource {name='bootstrapProperties-configClient'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client-course_service.yml'}, BootstrapPropertySource {name='bootstrapProperties-https://github.com/sonld36/tutor-config-repository/config-client.yml'}]","logger_name":"org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:24.565+07:00","@version":"1","message":"The following 1 profile is active: \"course_service\"","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.088+07:00","@version":"1","message":"Bootstrapping Spring Data JPA repositories in DEFAULT mode.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.191+07:00","@version":"1","message":"Finished Spring Data repository scanning in 96 ms. Found 1 JPA repository interface.","logger_name":"org.springframework.data.repository.config.RepositoryConfigurationDelegate","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.385+07:00","@version":"1","message":"BeanFactory id=216f55a5-9b89-3cf8-b5a8-e36562c65621","logger_name":"org.springframework.cloud.context.scope.GenericScope","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.476+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig' of type [org.springframework.cloud.client.loadbalancer.LoadBalancerAutoConfiguration$DeferringLoadBalancerInterceptorConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [lbRestClientPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:25.477+07:00","@version":"1","message":"Bean 'deferringLoadBalancerInterceptor' of type [org.springframework.cloud.client.loadbalancer.DeferringLoadBalancerInterceptor] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [lbRestClientPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:25.478+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). The currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor] is declared through a non-static factory method on that class; consider declaring it as static instead.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:25.479+07:00","@version":"1","message":"Bean 'org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig' of type [org.springframework.cloud.client.loadbalancer.reactive.LoadBalancerBeanPostProcessorAutoConfiguration$ReactorDeferringLoadBalancerFilterConfig] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:25.48+07:00","@version":"1","message":"Bean 'reactorDeferringLoadBalancerExchangeFilterFunction' of type [org.springframework.cloud.client.loadbalancer.reactive.DeferringLoadBalancerExchangeFilterFunction] is not eligible for getting processed by all BeanPostProcessors (for example: not eligible for auto-proxying). Is this bean getting eagerly injected into a currently created BeanPostProcessor [loadBalancerWebClientBuilderBeanPostProcessor]? Check the corresponding BeanPostProcessor declaration and its dependencies.","logger_name":"org.springframework.context.support.PostProcessorRegistrationDelegate$BeanPostProcessorChecker","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:25.645+07:00","@version":"1","message":"Tomcat initialized with port 0 (http)","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.652+07:00","@version":"1","message":"Initializing ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.653+07:00","@version":"1","message":"Starting service [Tomcat]","logger_name":"org.apache.catalina.core.StandardService","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.653+07:00","@version":"1","message":"Starting Servlet engine: [Apache Tomcat/10.1.20]","logger_name":"org.apache.catalina.core.StandardEngine","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.703+07:00","@version":"1","message":"Initializing Spring embedded WebApplicationContext","logger_name":"org.apache.catalina.core.ContainerBase.[Tomcat].[localhost].[/course]","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.704+07:00","@version":"1","message":"Root WebApplicationContext: initialization completed in 1123 ms","logger_name":"org.springframework.boot.web.servlet.context.ServletWebServerApplicationContext","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.815+07:00","@version":"1","message":"HHH000204: Processing PersistenceUnitInfo [name: default]","logger_name":"org.hibernate.jpa.internal.util.LogHelper","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.86+07:00","@version":"1","message":"HHH000412: Hibernate ORM core version 6.4.4.Final","logger_name":"org.hibernate.Version","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:25.892+07:00","@version":"1","message":"HHH000026: Second-level cache disabled","logger_name":"org.hibernate.cache.internal.RegionFactoryInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:26.092+07:00","@version":"1","message":"No LoadTimeWeaver setup: ignoring JPA class transformer","logger_name":"org.springframework.orm.jpa.persistenceunit.SpringPersistenceUnitInfo","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:26.115+07:00","@version":"1","message":"HikariPool-1 - Starting...","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:26.349+07:00","@version":"1","message":"HikariPool-1 - Added connection org.postgresql.jdbc.PgConnection@2b82018","logger_name":"com.zaxxer.hikari.pool.HikariPool","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:26.351+07:00","@version":"1","message":"HikariPool-1 - Start completed.","logger_name":"com.zaxxer.hikari.HikariDataSource","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:26.377+07:00","@version":"1","message":"HHH90000025: PostgreSQLDialect does not need to be specified explicitly using 'hibernate.dialect' (remove the property setting and it will be selected by default)","logger_name":"org.hibernate.orm.deprecation","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:27.27+07:00","@version":"1","message":"HHH000489: No JTA platform available (set 'hibernate.transaction.jta.platform' to enable JTA platform integration)","logger_name":"org.hibernate.engine.transaction.jta.platform.internal.JtaPlatformInitiator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:27.354+07:00","@version":"1","message":"Initialized JPA EntityManagerFactory for persistence unit 'default'","logger_name":"org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:27.631+07:00","@version":"1","message":"spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning","logger_name":"org.springframework.boot.autoconfigure.orm.jpa.JpaBaseConfiguration$JpaWebConfiguration","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:27.988+07:00","@version":"1","message":"Eureka HTTP Client uses RestTemplate.","logger_name":"org.springframework.cloud.netflix.eureka.config.DiscoveryClientOptionalArgsConfiguration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.17+07:00","@version":"1","message":"Spring Cloud LoadBalancer is currently working with the default cache. While this cache implementation is useful for development and tests, it's recommended to use Caffeine cache in production.You can switch to using Caffeine cache, by adding it and org.springframework.cache.caffeine.CaffeineCacheManager to the classpath.","logger_name":"org.springframework.cloud.loadbalancer.config.LoadBalancerCacheAutoConfiguration$LoadBalancerCaffeineWarnLogger","thread_name":"main","level":"WARN","level_value":30000}
{"@timestamp":"2024-05-04T21:07:28.205+07:00","@version":"1","message":"Starting ProtocolHandler [\"http-nio-auto-1\"]","logger_name":"org.apache.coyote.http11.Http11NioProtocol","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.222+07:00","@version":"1","message":"Tomcat started on port 59543 (http) with context path '/course'","logger_name":"org.springframework.boot.web.embedded.tomcat.TomcatWebServer","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.223+07:00","@version":"1","message":"Updating port to 59543","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaAutoServiceRegistration","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.227+07:00","@version":"1","message":"Setting initial instance status as: STARTING","logger_name":"org.springframework.cloud.netflix.eureka.InstanceInfoFactory","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.256+07:00","@version":"1","message":"Initializing Eureka in region us-east-1","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.26+07:00","@version":"1","message":"Resolving eureka endpoints via configuration","logger_name":"com.netflix.discovery.shared.resolver.aws.ConfigClusterResolver","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.278+07:00","@version":"1","message":"Disable delta property : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.278+07:00","@version":"1","message":"Single vip registry refresh property : null","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.278+07:00","@version":"1","message":"Force full registry fetch : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.278+07:00","@version":"1","message":"Application is null : false","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.278+07:00","@version":"1","message":"Registered Applications size is zero : true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.279+07:00","@version":"1","message":"Application version is -1: true","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.279+07:00","@version":"1","message":"Getting all instance registry info from the eureka server","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.462+07:00","@version":"1","message":"The response status is 200","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.464+07:00","@version":"1","message":"Starting heartbeat executor: renew interval is: 30","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.466+07:00","@version":"1","message":"InstanceInfoReplicator onDemand update allowed rate per min is 4","logger_name":"com.netflix.discovery.InstanceInfoReplicator","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.469+07:00","@version":"1","message":"Discovery Client initialized at timestamp 1714831648469 with initial instances count: 2","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.471+07:00","@version":"1","message":"Registering application COURSE-SERVICE with eureka with status UP","logger_name":"org.springframework.cloud.netflix.eureka.serviceregistry.EurekaServiceRegistry","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.472+07:00","@version":"1","message":"Saw local status change event StatusChangeEvent [timestamp=1714831648472, current=UP, previous=STARTING]","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"main","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.473+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0: registering service...","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.509+07:00","@version":"1","message":"DiscoveryClient_COURSE-SERVICE/host.docker.internal:course-service:0 - registration status: 204","logger_name":"com.netflix.discovery.DiscoveryClient","thread_name":"DiscoveryClient-InstanceInfoReplicator-0","level":"INFO","level_value":20000}
{"@timestamp":"2024-05-04T21:07:28.645+07:00","@version":"1","message":"Started CourseServiceApp in 6.322 seconds (process running for 6.957)","logger_name":"com.microservices.projectfinal.CourseServiceApp","thread_name":"main","level":"INFO","level_value":20000}
